import logging
import os
import json
import threading
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes
from astro_calc import process_user_data
from ai_interpreter import generate_transit_message
from server import app  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ


TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç!\n"
        "–Ø ‚Äî AstroSNai, –∞—Å—Ç—Ä–æ–±–æ—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç–≤–æ–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã.\n\n"
        "üåå –ß—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
        "‚Ä¢ –ì–¥–µ —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Å–∏–ª–∞ –∏ –∑–æ–Ω–∞ —Ä–æ—Å—Ç–∞\n"
        "‚Ä¢ –°–º—ã—Å–ª –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–≤–æ–µ–≥–æ –ø—É—Ç–∏\n"
        "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–∏ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<b>–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥</b>\n\n"
        "üìå –ù–∞–ø—Ä–∏–º–µ—Ä: <i>15.08.1990 14:30 –ñ–µ–Ω–µ–≤–∞</i>\n\n"
        "–Ø –Ω–∞ —Å–≤—è–∑–∏ ‚Äî –≥–æ—Ç–æ–≤ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç–≤–æ—é –∫–∞—Ä—Ç—É ‚ú®",
        parse_mode="HTML"
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        text = update.message.text
        user_id = update.message.from_user.id

        # üëá –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ –≥–æ—Ä–æ–¥
        date_str, time_str, city = text.split(" ", 2)

        # üëá –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—è—Ç—å—é –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
        username = update.message.from_user.username or update.message.from_user.full_name
        chart_path = process_user_data(
            telegram_id=user_id,
            username=username,
            date_str=date_str,
            time_str=time_str,
            city=city
        )

        await update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")

        keyboard = [[InlineKeyboardButton("üîÆ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="get_recommendations")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("üëá –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:", reply_markup=reply_markup)

    except ValueError as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text("‚ö†Ô∏è –£–±–µ–¥–∏—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú –ì–æ—Ä–æ–¥")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        

async def handle_transit(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    user_id = query.from_user.id
    chat_id = update.effective_chat.id
    chart_path = f"data/astro_user_{user_id}.json"

    try:
        # –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
        await query.message.reply_text("‚è≥ –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, —è –≥–æ—Ç–æ–≤–ª—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã...")
        
        # –ê–Ω–∏–º–∞—Ü–∏—è "–ø–µ—á–∞—Ç–∞–µ—Ç..."
        await context.bot.send_chat_action(chat_id=chat_id, action="typing") 

        with open(chart_path, "r", encoding="utf-8") as f:
            chart = json.load(f)

        saturn = chart["planets"]["–°–∞—Ç—É—Ä–Ω"]
        mars = chart["planets"]["–ú–∞—Ä—Å"]
        jupiter = chart["planets"]["–Æ–ø–∏—Ç–µ—Ä"]
        aspects = chart["aspects"]

        logger.info(f"üìå –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: –°–∞—Ç—É—Ä–Ω={saturn}, –ú–∞—Ä—Å={mars}, –Æ–ø–∏—Ç–µ—Ä={jupiter}, –ê—Å–ø–µ–∫—Ç—ã={len(aspects)} —à—Ç.")

        message = generate_transit_message(
            neptune=chart["planets"]["–ù–µ–ø—Ç—É–Ω"],
            saturn=saturn,
            mars=mars,
            jupiter=jupiter,
            aspects=aspects
        )
        if not message or not message.strip():
            await context.bot.send_message(
                chat_id=chat_id,
                text="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ.",
                parse_mode="HTML"
            )
        else:
            await context.bot.send_message(chat_id=chat_id, text=message, parse_mode="HTML")
        await context.bot.send_message(
            chat_id=chat_id,
            text=(
                "‚ùì <b>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?</b>\n"
                "üîπ –ó–∞–ø–æ–ª–Ω–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Ñ–æ—Ä–º—É ‚Äî –∏ —è –æ—Ç–≤–µ—á—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–≥—É üëâ <a href='https://forms.gle/YuCsqzEbuYAQ6eba8'>—Ñ–æ—Ä–º–∞</a>\n"
                "ü§ñ –ò–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –Ω–∞—à–µ–º—É –ø–æ–º–æ—â–Ω–∏–∫—É: <a href='https://t.me/lifeinastro_bot'>@lifeinastro_bot</a>"
            ),
            parse_mode="HTML",
            disable_web_page_preview=True
        )


    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∏—Ç–∞: %s", e)
        await query.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∏—Ç–∞: {e}")

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    print("üõ†Ô∏è –ö–æ–º–∞–Ω–¥–∞ /about –ø–æ–ª—É—á–µ–Ω–∞")

    text1 = (
        "ü™ê <b>–û —á—ë–º —ç—Ç–æ—Ç –±–æ—Ç –∏ –∫–∞–∫ –æ–Ω –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å?</b>\n\n"
        "–ú—ã –∂–∏–≤—ë–º –≤ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è: —Å–µ–π—á–∞—Å –≤ –Ω–µ–±–µ —Ä–µ–¥–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –ø–ª–∞–Ω–µ—Ç ‚Äî <b>–°–∞—Ç—É—Ä–Ω–∞ –∏ –ù–µ–ø—Ç—É–Ω–∞ –≤ –∑–Ω–∞–∫–µ –û–≤–Ω–∞.</b> "
        "–≠—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç <b>–º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—á—Ç—ã, –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ä—ã—Ö –∏–¥–µ–∞–ª–æ–≤ –∏ –¥—É—Ö–æ–≤–Ω–æ–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –¥–µ–π—Å—Ç–≤–∏–µ.</b>\n\n"
        "üîπ –ù–µ–ø—Ç—É–Ω ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ, –º–µ—á—Ç—ã, –¥—É—Ö–æ–≤–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è\n"
        "üîπ –°–∞—Ç—É—Ä–Ω ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —à–∞–≥–∏ –∫ –≤–æ–ø–ª–æ—â–µ–Ω–∏—é\n\n"
        "–ù–æ –≤–ª–∏—è–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã:"
    )

    text2 = (
        "‚Äî –ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç –≤ –º–æ–º–µ–Ω—Ç —Ä–æ–∂–¥–µ–Ω–∏—è\n"
        "‚Äî –ò—Ö –∞—Å–ø–µ–∫—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ —Ç–æ—á–∫–∞–º–∏\n\n"
        "‚ú® –ë–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–≤–æ—é –∫–∞—Ä—Ç—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:\n"
        "‚Äî üí° –ß—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∂–µ–ª–∞–µ–º–æ–≥–æ\n"
        "‚Äî ‚öôÔ∏è –ö–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å\n"
        "‚Äî üß≠ –†–∞–¥–∏ —á–µ–≥–æ –≤—Å—ë —ç—Ç–æ\n"
        "‚Äî üîê –ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫\n\n"
        "<b>–≠—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–æ–≥–Ω–æ–∑. –≠—Ç–æ –∫–∞—Ä—Ç–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –∫ —Å–µ–±–µ.</b>\n\n"
        "<i>–°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –∫ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏ –∏ —Å–∏–ª–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ üíõ</i>"
    )

    await update.message.reply_text(text1, parse_mode="HTML")
    await update.message.reply_text(text2, parse_mode="HTML")
    

async def instruction_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üß≠ <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –∑–∞—á–µ–º –æ–Ω –≤–æ–æ–±—â–µ –Ω—É–∂–µ–Ω?</b>\n\n"
        "‚ú® –í 2025 –≥–æ–¥—É –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–µ–¥–∫–æ–µ –∏ –º–æ—â–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –°–∞—Ç—É—Ä–Ω–∞ –∏ –ù–µ–ø—Ç—É–Ω–∞ –≤ –∑–Ω–∞–∫–µ –û–≤–Ω–∞ ‚Äî —ç—Ç–æ –≤–∞–∂–Ω—ã–π "
        "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—ã–π <b>36-–ª–µ—Ç–Ω–∏–π —Ü–∏–∫–ª</b>. –¢–∞–∫–æ–π —à–∞–Ω—Å –±—ã–≤–∞–µ—Ç –Ω–µ—á–∞—Å—Ç–æ.\n\n"
        "üîπ <b>13 –∏—é–ª—è 2025</b> ‚Äî —Ñ–∞–∑–∞ —Å–±–ª–∏–∂–µ–Ω–∏—è: –æ–±–µ –ø–ª–∞–Ω–µ—Ç—ã –ø—Ä–∏–±–ª–∏–∂–∞—é—Ç—Å—è –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É –≤ –ø–µ—Ä–≤—ã—Ö –≥—Ä–∞–¥—É—Å–∞—Ö –û–≤–Ω–∞\n"
        "üîπ <b>–§–µ–≤—Ä–∞–ª—å 2026</b> ‚Äî —Ç–æ—á–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ 0¬∞45‚Ä≤ –û–≤–Ω–∞\n"
        "üîπ <i>–í–µ—Å—å 2025 –≥–æ–¥</i> ‚Äî –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–æ –∑–∞–ª–æ–∂–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã\n\n"
        "üåå –≠—Ç–æ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –º–µ—á—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø–ª–∞–Ω–æ–º, –∞ —Ç—É–º–∞–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–±—Ä–µ—Ç–∞—Ç—å —Ñ–æ—Ä–º—É.\n\n"
        "‚öôÔ∏è <b>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç:</b>\n"
        "1Ô∏è‚É£ –¢—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ –≥–æ—Ä–æ–¥ —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è\n"
        "2Ô∏è‚É£ –ë–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–≤–æ—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É\n"
        "3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é: –∫–∞–∫, –∑–∞—á–µ–º –∏ –∫—É–¥–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è, —á—Ç–æ–±—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –º–µ—á—Ç—É\n\n"
        "üí´ <b>–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:</b>\n"
        "‚Äî –ü–æ–¥—Å–∫–∞–∑–∫–∏, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –≤ —ç—Ç–æ –≤—Ä–µ–º—è\n"
        "‚Äî –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–∞–∫ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–Ω–∏—è, —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Ç–∞–ª–∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é\n"
        "‚Äî –û–ø–æ—Ä—É, –∫–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤—Å—ë —Ç—É–º–∞–Ω–Ω–æ\n\n"
        "<b>–ö–∞–∫–∏–µ –∂–µ–ª–∞–Ω–∏—è –∑–∞–≥–∞–¥—ã–≤–∞—Ç—å?</b>\n"
        "üå± –ì–ª—É–±–æ–∫–∏–µ, –∑—Ä–µ–ª—ã–µ, –¥—É—à–µ–≤–Ω—ã–µ ‚Äî —Ç–µ, —á—Ç–æ –∏–¥—É—Ç –∏–∑–Ω—É—Ç—Ä–∏, –∞ –Ω–µ –Ω–∞–≤—è–∑–∞–Ω—ã –∏–∑–≤–Ω–µ.\n"
        "üö´ –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Å–µ–π—á–∞—Å –≥–Ω–∞—Ç—å—Å—è –∑–∞ –±—ã—Å—Ç—Ä—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, —Å—Ç–∞—Ç—É—Å–æ–º –∏–ª–∏ —á—É–∂–∏–º–∏ –º–µ—á—Ç–∞–º–∏.\n\n"
        "<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –±–æ—Ç–∞:</b>\n"
        "1Ô∏è‚É£ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ\n"
        "2Ô∏è‚É£ –ó–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–Ω–∏—è –≤ —Ç–µ—Ç—Ä–∞–¥—å/–¥–Ω–µ–≤–Ω–∏–∫/–∑–∞–º–µ—Ç–∫–∏\n"
        "3Ô∏è‚É£ –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ 1‚Äì3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —É–∂–µ —Å–µ–π—á–∞—Å\n"
        "4Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äî —É —ç—Ç–æ–≥–æ –ø—É—Ç–∏ —Å–≤–æ–∏ —Å—Ä–æ–∫–∏\n"
        "5Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ ‚Äî –∫–∞–∫ –∫ –∫–∞—Ä—Ç–µ üíõ\n\n"
        "<i>–ü—É—Å—Ç—å –º–µ—á—Ç–∞ –æ–±—Ä–µ—Ç—ë—Ç —Ñ–æ—Ä–º—É.</i>",
        parse_mode="HTML"
    )


def main() -> None:
    app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about_command))
    app.add_handler(CommandHandler("instruction", instruction_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(CallbackQueryHandler(handle_transit))

    app.run_polling()


if __name__ == "__main__":
    main()
